require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '15.0'
install! 'cocoapods', :deterministic_uuids => false

target 'piaoliuapp' do
  config = use_native_modules!

  # React Native 0.72.17 标准配置
  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => false,
    :fabric_enabled => false,
    :flipper_configuration => FlipperConfiguration.disabled,
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  # 修复 react-native-image-picker 的 limits.h 问题
  pod 'react-native-image-picker', :path => '../node_modules/react-native-image-picker'

  target 'piaoliuappTests' do
    inherit! :complete
  end

  post_install do |installer|
    react_native_post_install(
      installer,
      :mac_catalyst_enabled => false
    )
    
    # 修复iOS 15+ 的构建问题
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
        config.build_settings['CLANG_CXX_LIBRARY'] = 'libc++'
        
        # 修复 react-native-image-picker 的 limits.h 和 yoga/YGValue.h 问题
        if target.name == 'react-native-image-picker'
          config.build_settings['HEADER_SEARCH_PATHS'] ||= []
          config.build_settings['HEADER_SEARCH_PATHS'] << '$(SDKROOT)/usr/include'
          config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_ROOT)/Headers/Public/Yoga'
        end
        
        # 修复主应用的 FLT_MAX/FLT_MIN 问题
        if target.name == 'piaoliuapp'
          config.build_settings['HEADER_SEARCH_PATHS'] ||= []
          # 排除 Android 平台的头文件路径
          config.build_settings['HEADER_SEARCH_PATHS'] = config.build_settings['HEADER_SEARCH_PATHS'].reject { |path| 
            path.include?('android') || path.include?('Android') || path.include?('platform/android')
          }
        end
        
        # 修复 fmt 库的头文件路径问题
        if target.name == 'fmt'
          config.build_settings['HEADER_SEARCH_PATHS'] ||= []
          config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_ROOT)/fmt/include'
        end
        
        # 修复 RCT-Folly 库的头文件路径问题
        if target.name == 'RCT-Folly'
          config.build_settings['HEADER_SEARCH_PATHS'] ||= []
          config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_ROOT)/RCT-Folly'
        end
        
        # 修复 glog 库的头文件路径问题
        if target.name == 'glog'
          config.build_settings['HEADER_SEARCH_PATHS'] ||= []
          config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_ROOT)/glog/src'
        end
        
        # 修复 RCTTypeSafety 的 FBLazyVector 头文件路径问题
        if target.name == 'RCTTypeSafety'
          config.build_settings['HEADER_SEARCH_PATHS'] ||= []
          config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_ROOT)/Headers/Public/FBLazyVector'
        end
        
        # 修复 React-logger 的 glog 头文件路径问题
        if target.name == 'React-logger'
          config.build_settings['HEADER_SEARCH_PATHS'] ||= []
          config.build_settings['HEADER_SEARCH_PATHS'] << '$(PODS_ROOT)/glog/src'
        end
        
        # 对所有目标排除 Android 路径
        config.build_settings['HEADER_SEARCH_PATHS'] ||= []
        config.build_settings['HEADER_SEARCH_PATHS'] = config.build_settings['HEADER_SEARCH_PATHS'].reject { |path| 
          path.include?('android') || path.include?('Android') || path.include?('platform/android')
        }
      end
    end
  end
end